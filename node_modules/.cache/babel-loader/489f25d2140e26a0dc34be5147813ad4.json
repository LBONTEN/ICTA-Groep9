{"ast":null,"code":"var _jsxFileName = \"/home/cheche/Projects/ICTA-Groep9/src/Components/Upload.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Upload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.uploadFile = () => {\n      console.log(\"upload file pressed...\");\n      const fileinput = document.getElementById('fileinput');\n      const count = document.getElementById('countInput').value;\n      let file = fileinput.files[0];\n\n      if (!(file === undefined)) {\n        this.setState({\n          showUrl: true\n        });\n        this.post_get_Handler(file, count);\n      } else {\n        this.setState({\n          showUrl: false\n        });\n      }\n    };\n\n    this.state = {\n      base_url: null,\n      showUrl: false,\n      user: props.user\n    };\n  }\n\n  async post_get_Handler(file, count) {\n    var fullPath = document.getElementById('fileinput').value;\n\n    if (fullPath) {\n      var startIndex = fullPath.indexOf('\\\\') >= 0 ? fullPath.lastIndexOf('\\\\') : fullPath.lastIndexOf('/');\n      var filename = fullPath.substring(startIndex);\n\n      if (filename.indexOf('\\\\') === 0 || filename.indexOf('/') === 0) {\n        filename = filename.substring(1);\n      } // SEND GET\n\n\n      console.log(this.props.user.user.name);\n      console.log(count);\n      const user_name = this.props.user.user.name;\n      const response = await fetch(`https://hek46ulrnc.execute-api.us-east-1.amazonaws.com/prod/upload\n                    ?file=${filename}\n                    &user=${user_name}\n                    &count=${count}`);\n      const data = await response.json();\n      this.setState({\n        base_url: data.URL.url + data.URL.fields.key\n      }); // POST\n\n      let form = new FormData();\n      Object.keys(data.URL.fields).forEach(key => form.append(key, data.URL.fields[key]));\n      form.append('file', file);\n      form.append('user', this.props.user.user.name);\n      form.append('count', count); //SEND POST\n\n      const post_response = await fetch(data.URL.url, {\n        method: 'POST',\n        body: form\n      });\n\n      if (!post_response.ok) {\n        console.log('Failed to upload via presigned POST');\n      }\n\n      console.log(`File uploaded via presigned POST with key: ${data.URL.fields.key}`);\n    }\n  }\n\n  copyText() {\n    let element = document.getElementById(\"key\");\n    document.execCommand(\"copy\");\n    element.addEventListener(\"copy\", function (event) {\n      event.preventDefault();\n\n      if (event.clipboardData) {\n        event.clipboardData.setData(\"text/plain\", element.textContent);\n      }\n    });\n    let tooltip = document.getElementById(\"copyTooltip\");\n    tooltip.innerHTML = 'Copied to clipboard';\n  }\n\n  changeToolTip() {\n    let tooltip = document.getElementById(\"copyTooltip\");\n    tooltip.innerHTML = \"Copy to clipboard\";\n  }\n\n  changeChosenFile() {\n    let fileinput = document.getElementById(\"fileinput\");\n    let filelabel = document.getElementById(\"filelabel\");\n    filelabel.innerHTML = `Chosen file: ${fileinput.files[0].name}`;\n  }\n\n  resetFile() {\n    let filelabel = document.getElementById(\"filelabel\");\n    filelabel.innerHTML = \"Choose file\";\n  }\n\n  render() {\n    let url;\n\n    if (this.state.showUrl) {\n      url = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tooltip\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          onClick: this.copyText,\n          onMouseOut: this.changeToolTip,\n          id: \"key\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tooltipText\",\n            id: \"copyTooltip\",\n            children: \"Copy to clipboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), this.state.base_url]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"File: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"custom-input file-input input-button hoverable\",\n            htmlFor: \"fileinput\",\n            id: \"filelabel\",\n            children: \"Choose file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            id: \"fileinput\",\n            onChange: this.changeChosenFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"count\",\n            children: \"Count:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"count\",\n            id: \"countInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Upload\",\n          className: \"input-button hoverable\",\n          onClick: this.uploadFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"reset\",\n          value: \"Reset the file\",\n          clasName: \"input-button hoverable\",\n          onClick: this.resetFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), url]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/cheche/Projects/ICTA-Groep9/src/Components/Upload.js"],"names":["React","Component","Upload","constructor","props","uploadFile","console","log","fileinput","document","getElementById","count","value","file","files","undefined","setState","showUrl","post_get_Handler","state","base_url","user","fullPath","startIndex","indexOf","lastIndexOf","filename","substring","name","user_name","response","fetch","data","json","URL","url","fields","key","form","FormData","Object","keys","forEach","append","post_response","method","body","ok","copyText","element","execCommand","addEventListener","event","preventDefault","clipboardData","setData","textContent","tooltip","innerHTML","changeToolTip","changeChosenFile","filelabel","resetFile","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nexport default class Upload extends Component {    \n    constructor(props) {\n        super(props);\n        this.state= {\n            base_url: null,\n            showUrl: false,\n            user: props.user,\n        };\n    }\n\n    async post_get_Handler(file, count) {\n        var fullPath = document.getElementById('fileinput').value;\n        if (fullPath) {\n            var startIndex = (fullPath.indexOf('\\\\') >= 0 ? fullPath.lastIndexOf('\\\\') : fullPath.lastIndexOf('/'));\n            var filename = fullPath.substring(startIndex);\n            if (filename.indexOf('\\\\') === 0 || filename.indexOf('/') === 0) {\n                filename = filename.substring(1);\n            }\n        \n            // SEND GET\n            console.log(this.props.user.user.name);\n            console.log(count)\n            const user_name = this.props.user.user.name\n            const response = await fetch(\n                `https://hek46ulrnc.execute-api.us-east-1.amazonaws.com/prod/upload\n                    ?file=${filename}\n                    &user=${user_name}\n                    &count=${count}`);\n\n            const data = await response.json();\n            \n            this.setState({ base_url: data.URL.url + data.URL.fields.key })\n\n            // POST\n            let form = new FormData();\n            Object.keys(data.URL.fields).forEach(key => form.append(key, data.URL.fields[key]));\n            form.append('file', file)\n            form.append('user', this.props.user.user.name)\n            form.append('count', count)\n            \n            //SEND POST\n            const post_response = await fetch(data.URL.url, { method: 'POST', body: form });\n            if (!post_response.ok) {\n                console.log('Failed to upload via presigned POST');\n            }\n            console.log(`File uploaded via presigned POST with key: ${data.URL.fields.key}`);\n        }\n    }\n\n    uploadFile = () => {\n        console.log(\"upload file pressed...\");\n        const fileinput = document.getElementById('fileinput');\n        const count = document.getElementById('countInput').value;\n        let file = fileinput.files[0];\n        if(!(file === undefined)) {\n            this.setState({showUrl: true})\n            this.post_get_Handler(file, count);\n        } else {\n            this.setState({showUrl: false})\n        }\n        \n    }\n\n    copyText() {  \n        let element = document.getElementById(\"key\");\n        document.execCommand(\"copy\");\n        element.addEventListener(\"copy\", function(event) {\n            event.preventDefault();\n            if(event.clipboardData) {\n                event.clipboardData.setData(\"text/plain\", element.textContent);\n            }\n        });\n\n        let tooltip = document.getElementById(\"copyTooltip\");\n        tooltip.innerHTML = 'Copied to clipboard'\n    }\n\n    changeToolTip() {\n        let tooltip = document.getElementById(\"copyTooltip\");\n        tooltip.innerHTML = \"Copy to clipboard\";\n    }\n\n    changeChosenFile() {\n        let fileinput = document.getElementById(\"fileinput\");\n        let filelabel = document.getElementById(\"filelabel\");\n        filelabel.innerHTML = `Chosen file: ${fileinput.files[0].name}`;\n    }\n\n    resetFile() {\n        let filelabel = document.getElementById(\"filelabel\");\n        filelabel.innerHTML = \"Choose file\";\n    }\n\n    render() {\n        let url;\n        if(this.state.showUrl)\n        {\n        url = \n        <div className=\"tooltip\">\n            <h1 onClick={this.copyText} onMouseOut={this.changeToolTip} id=\"key\">\n                <span className=\"tooltipText\" id=\"copyTooltip\">Copy to clipboard</span>\n                {this.state.base_url}\n            </h1>\n        </div>\n        }\n        return(\n            <div>\n                <form>\n                    <div className=\"field\">\n                        <label>File: </label>\n                        <label className=\"custom-input file-input input-button hoverable\" htmlFor=\"fileinput\" id=\"filelabel\">Choose file</label>\n                        <input type=\"file\" name=\"file\" id=\"fileinput\" onChange={this.changeChosenFile}/>\n                        <label htmlFor=\"count\">Count:</label>\n                        <input type=\"text\" name=\"count\" id=\"countInput\"/>\n                    </div>\n                    <input type=\"button\" value=\"Upload\" className=\"input-button hoverable\" onClick={this.uploadFile} />\n                    <input type=\"reset\" value=\"Reset the file\" clasName=\"input-button hoverable\" onClick={this.resetFile} />\n                </form>\n                {url}\n        </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}